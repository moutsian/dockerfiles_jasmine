# Base image
FROM ubuntu:18.04 as builder

################## METADATA ######################

#LABEL base_image="ubuntu:16.04"
LABEL base_image="ubuntu:18.04"
LABEL version="4"
LABEL software="Biocontainers base Image"
LABEL software.version="1.0.0"
LABEL about.summary="Base image for BioDocker"
LABEL about.home="http://biocontainers.pro"
LABEL about.documentation="https://github.com/BioContainers/specs/wiki"
LABEL about.license_file="https://github.com/BioContainers/containers/blob/master/LICENSE"
LABEL about.license="SPDX:Apache-2.0"
LABEL about.tags="Genomics,Proteomics,Transcriptomics,General,Metabolomics"

ENV DEBIAN_FRONTEND noninteractive

 RUN apt-get clean all && \
    apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y  \
        autotools-dev   \
        automake        \
        cmake           \
        curl            \
        grep            \
        sed             \
        dpkg            \
        fuse            \
        git             \
        wget            \
        zip             \
        openjdk-11-jre-headless   \
        build-essential \
        pkg-config      \
        python          \
	    python-dev      \
        python-pip      \
        bzip2           \
        ca-certificates \
        libglib2.0-0    \
        libxext6        \
        libsm6          \
        libxrender1     \
        git             \
        mercurial       \
        subversion      \
        zlib1g-dev &&   \
        apt-get clean && \
        apt-get purge && \
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \ 
rm ~/miniconda.sh

#if running docker 1.13 or greater, Tini is included in Docker itself
RUN TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean

    
RUN mkdir /data /config


 # Add user biodocker with password biodocker --> I wonder whether this is necessary/good practice?
 # It seems to be, but I should move it to the running container, not the builder
RUN groupadd fuse && \
    useradd --create-home --shell /bin/bash --user-group --uid 1000 --groups sudo,fuse biodocker && \
    echo `echo "biodocker\nbiodocker\n" | passwd biodocker` && \
    chown biodocker:biodocker /data && \
    chown biodocker:biodocker /config

 # give write permissions to conda folder
RUN chmod 777 -R /opt/conda/

#RUN sudo apt-get install openjdk-11-jdk

# Change user
USER biodocker

ENV PATH=$PATH:/opt/conda/bin
ENV PATH=$PATH:/home/biodocker/bin
ENV HOME=/home/biodocker

RUN mkdir /home/biodocker/bin

#RUN conda upgrade conda
#RUN conda config --add channels r
RUN conda config --add channels bioconda
RUN conda config --add channels conda-forge

#RUN conda upgrade conda
#RUN conda install -c conda-forge tqdm
RUN pip install tqdm
RUN pip install six
#24/12: Still the conda install for jasminesv doesn't work, it failes with repodata from current_repodata.json, then gets stuck in "will retry with next repodata source"
#Perhaps need to consider not installing via conda. Otherwise retry without upgrade conda, and install tqdm and six with pip since they seem to work?
RUN conda install jasminesv 
VOLUME ["/data", "/config"]
ENV PATH=$PATH:/opt/conda/bin/jasmine


from ubuntu:18.04
#copy the executable from the process above to the container
RUN     apt-get clean all && \
        apt-get update && \
        apt-get upgrade -y && \
        apt-get install -y  \
        autotools-dev   \
        openjdk-11-jre-headless   \
        libglib2.0-0    \
        libxext6        \
        libsm6          \
        libxrender1     \
        zlib1g-dev &&   \
        apt-get clean && \
        apt-get purge && \
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
        
COPY --from=builder /opt/conda/bin/minimap2 opt/conda/bin/
COPY --from=builder /opt/conda/bin/sam* opt/conda/bin/
COPY --from=builder /opt/conda/bin/rac* opt/conda/bin/
COPY --from=builder /opt/conda/bin/jas* opt/conda/bin/
COPY --from=builder /opt/conda/bin/iris* opt/conda/bin/
ENV PATH=$PATH:/opt/conda/bin

CMD java -jar /opt/conda/bin/jasmine.jar